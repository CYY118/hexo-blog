{"version":3,"file":"static/js/417.4b4c0fe7.chunk.js","mappings":"mKAGAA,E,SAAAA,GAAU,CACRC,MAAO,WACLC,IAAAA,KAAU,IAAIC,OAAO,oCAAoC,WACvD,IAAMC,GAAO,IAAIC,MAAOC,cASxB,MAAO,CACLC,YAAa,UACbC,aAAc,MACdC,iBAAkB,OAClBC,WAAY,OACZC,UAXO,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAOC,GAAR,MAAmB,CAClDC,KAAK,GAAD,OAAKb,EAAL,YAAaY,EAAQ,GACzBE,MAAOhB,IAAAA,OAAAA,QAAoB,IAAO,cAaxC,IAAMiB,EAAU,WAad,OAVIjB,IAAAA,KAAU,CACZ,WAAY,CAAC,CACX,UAAW,EACXkB,MAAO,kBAAMlB,IAAAA,OAAAA,KAAiB,CAAC,mGAAoB,yIAA4B,mGAAoB,sGACnGmB,GAAI,WACF,OAAO,IAAS,KAAOC,KAAKC,MAE9BC,SAAU,oBARZC,MAcEC,EAAWP,IACXQ,EAAUR,IACVS,EAAYT,IAClBjB,IAAAA,KAAU,IAAIC,OAAO,oCAAoC,SAAA0B,GACvD,MAIIC,EAAAA,SAAYD,EAAOE,KAAKC,MAJ5B,IACEC,KAAAA,OADF,MACS,EADT,MAEEC,SAAAA,OAFF,MAEa,EAFb,MAGEC,SAGF,MAAO,CACLV,KAFW,CAACC,EAAUC,EAASC,GAAWQ,YAL5C,MAGa,EAHb,IAOaC,OAAOJ,EAAO,GAAKC,EAAUD,EAAOC,GAC/CI,MAAO,QAGXpC,IAAAA,KAAU,IAAIC,OAAO,sCAAsC,WACzD,MAAO,CAAC,CACNoC,KAAM,qBACNrB,MAAO,OACPsB,QAAS,KACR,CACDD,KAAM,qBACNrB,MAAO,OACPsB,QAAS,KACR,CACDD,KAAM,qBACNrB,MAAO,OACPsB,QAAS,SAGbtC,IAAAA,KAAU,IAAIC,OAAO,gCAAgC,WACnD,MAAO,CAAC,CACNoC,KAAM,WACNE,IAAK,IACLC,QAAS,oDACR,CACDH,KAAM,OACNE,IAAK,IACLC,QAAS,sHACR,CACDH,KAAM,SACNE,IAAK,IACLC,QAAS,wIACR,CACDH,KAAM,SACNE,IAAK,IACLC,QAAS,kEACR,CACDH,KAAM,OACNE,IAAK,IACLC,QAAS","sources":["pages/dashboard/workplace/mock/index.ts"],"sourcesContent":["import Mock from 'mockjs';\nimport qs from 'query-string';\nimport setupMock from '@/utils/setupMock';\nsetupMock({\n  setup: () => {\n    Mock.mock(new RegExp('/api/workplace/overview-content'), () => {\n      const year = new Date().getFullYear();\n\n      const getLineData = () => {\n        return new Array(12).fill(0).map((_item, index) => ({\n          date: `${year}-${index + 1}`,\n          count: Mock.Random.natural(20000, 75000)\n        }));\n      };\n\n      return {\n        allContents: '373.5w+',\n        liveContents: '368',\n        increaseComments: '8874',\n        growthRate: '2.8%',\n        chartData: getLineData()\n      };\n    });\n\n    const getList = () => {\n      const {\n        list\n      } = Mock.mock({\n        'list|100': [{\n          'rank|+1': 1,\n          title: () => Mock.Random.pick(['经济日报：财政政策要精准提升效能', '“双12”遇冷消费者厌倦了电商平台的促销“套路”', '致敬坚守战“疫”一线的社区工作者', '普高还是职高？家长们陷入选校难题']),\n          pv: function () {\n            return 500000 - 3200 * this.rank;\n          },\n          increase: '@float(-1, 1)'\n        }]\n      });\n      return list;\n    };\n\n    const listText = getList();\n    const listPic = getList();\n    const listVideo = getList();\n    Mock.mock(new RegExp('/api/workplace/popular-contents'), params => {\n      const {\n        page = 1,\n        pageSize = 5,\n        category = 0\n      } = qs.parseUrl(params.url).query;\n      const list = [listText, listPic, listVideo][Number(category)];\n      return {\n        list: list.slice((page - 1) * pageSize, page * pageSize),\n        total: 100\n      };\n    });\n    Mock.mock(new RegExp('/api/workplace/content-percentage'), () => {\n      return [{\n        type: '纯文本',\n        count: 148564,\n        percent: 0.16\n      }, {\n        type: '图文类',\n        count: 334271,\n        percent: 0.36\n      }, {\n        type: '视频类',\n        count: 445695,\n        percent: 0.48\n      }];\n    });\n    Mock.mock(new RegExp('/api/workplace/announcement'), () => {\n      return [{\n        type: 'activity',\n        key: '1',\n        content: '内容最新优惠活动'\n      }, {\n        type: 'info',\n        key: '2',\n        content: '新增内容尚未通过审核，详情请点击查看。'\n      }, {\n        type: 'notice',\n        key: '3',\n        content: '当前产品试用期即将结束，如需续费请点击查看。'\n      }, {\n        type: 'notice',\n        key: '4',\n        content: '1 月新系统升级计划通知'\n      }, {\n        type: 'info',\n        key: '5',\n        content: '新增内容已经通过审核，详情请点击查看。'\n      }];\n    });\n  }\n});"],"names":["setupMock","setup","Mock","RegExp","year","Date","getFullYear","allContents","liveContents","increaseComments","growthRate","chartData","Array","fill","map","_item","index","date","count","getList","title","pv","this","rank","increase","list","listText","listPic","listVideo","params","qs","url","query","page","pageSize","category","Number","slice","total","type","percent","key","content"],"sourceRoot":""}